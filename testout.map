
There are no discarded input sections

メモリ設定

名前           原点             長さ             属性
ram              0x0000000004000000 0x0000000008000000 axw!rl
*default*        0x0000000000000000 0xffffffffffffffff

リンカスクリプトおよびメモリマップ


.text           0x0000000004000000      0x490
                [!provide]                        PROVIDE (_text_start = .)
                0x0000000004000000                _stext = .
 *(.reset)
 .reset         0x0000000004000000       0x18 obj/start.o
                0x0000000004000000                _start
 *(.text .text.*)
 *fill*         0x0000000004000018        0x8 
 .text          0x0000000004000020      0x380 obj/main.o
                0x0000000004000020                uart_putchar
                0x0000000004000040                print_message
                0x00000000040001b0                Task1
                0x0000000004000224                Task2
                0x00000000040002a0                Task3
                0x0000000004000314                TaskSwitch
                0x0000000004000324                Schedule
                0x0000000004000370                InitTask
 .text.startup  0x00000000040003a0       0xa0 obj/main.o
                0x00000000040003a0                main
 .text          0x0000000004000440       0x50 obj/primitive.o
                0x0000000004000440                switch_context
                0x0000000004000468                load_context
 .text          0x0000000004000490        0x0 obj/start.o
                [!provide]                        PROVIDE (_text_end = .)
                0x0000000004000490                _etext = .

.iplt           0x0000000004000490        0x0
 .iplt          0x0000000004000490        0x0 obj/main.o

.rodata         0x0000000004000490       0x17
                [!provide]                        PROVIDE (_rodata_start = .)
 *(.rodata .rodata.*)
 .rodata.str1.8
                0x0000000004000490       0x17 obj/main.o
 *(.note.*)
 .note.GNU-stack
                0x00000000040004a7        0x0 obj/main.o
                [!provide]                        PROVIDE (_rodata_end = .)

.eh_frame       0x00000000040004a8      0x100
 .eh_frame      0x00000000040004a8      0x100 obj/main.o

.rela.dyn       0x00000000040005a8        0x0
 .rela.iplt     0x00000000040005a8        0x0 obj/main.o
 .rela.got      0x00000000040005a8        0x0 obj/main.o
 .rela.reset    0x00000000040005a8        0x0 obj/main.o

.data           0x00000000040005a8      0xa58
                0x0000000004001000                . = ALIGN (0x1000)
 *fill*         0x00000000040005a8      0xa58 
                [!provide]                        PROVIDE (_data_start = .)
 *(.data .data.*)
 .data          0x0000000004001000        0x0 obj/main.o
 .data          0x0000000004001000        0x0 obj/primitive.o
 .data          0x0000000004001000        0x0 obj/start.o

.igot.plt       0x0000000004001000        0x0
 .igot.plt      0x0000000004001000        0x0 obj/main.o

.got            0x0000000004001000       0x18
 .got           0x0000000004001000       0x18 obj/main.o
                0x0000000004001000                _GLOBAL_OFFSET_TABLE_

.got.plt        0x0000000004001018       0x18
 .got.plt       0x0000000004001018       0x18 obj/main.o

.sdata          0x0000000004001030        0x0
 *(.sdata .sdata.*)
                [!provide]                        PROVIDE (_data_end = .)

.sbss           0x0000000004001030        0x0
                0x0000000004001030                . = ALIGN (0x10)
                0x0000000004001030                PROVIDE (_bss_start = .)
 *(.sbss .sbss.*)

.bss            0x0000000004001030    0x18040
 *(.bss .bss.*)
 .bss           0x0000000004001030    0x18040 obj/main.o
                0x0000000004001030                CurrentTask
                0x0000000004001040                TaskControl
 .bss           0x0000000004019070        0x0 obj/primitive.o
 .bss           0x0000000004019070        0x0 obj/start.o
                0x0000000004019070                . = ALIGN (0x10)
                0x0000000004019070                PROVIDE (_bss_end = .)

.stack          0x0000000004019070     0x1000
                0x0000000004019070                . = ALIGN (0x10)
                [!provide]                        PROVIDE (_stack_start = .)
                0x000000000401a070                . = (. + 0x1000)
 *fill*         0x0000000004019070     0x1000 
                0x000000000401a070                PROVIDE (_stack_end = .)
LOAD obj/main.o
LOAD obj/primitive.o
LOAD obj/start.o
OUTPUT(arm64os.elf elf64-littleaarch64)
LOAD linker stubs

.debug_info     0x0000000000000000      0x964
 .debug_info    0x0000000000000000      0x914 obj/main.o
 .debug_info    0x0000000000000914       0x28 obj/primitive.o
 .debug_info    0x000000000000093c       0x28 obj/start.o

.debug_abbrev   0x0000000000000000      0x38e
 .debug_abbrev  0x0000000000000000      0x366 obj/main.o
 .debug_abbrev  0x0000000000000366       0x14 obj/primitive.o
 .debug_abbrev  0x000000000000037a       0x14 obj/start.o

.debug_loclists
                0x0000000000000000      0x473
 .debug_loclists
                0x0000000000000000      0x473 obj/main.o

.debug_aranges  0x0000000000000000       0xa0
 .debug_aranges
                0x0000000000000000       0x40 obj/main.o
 .debug_aranges
                0x0000000000000040       0x30 obj/primitive.o
 .debug_aranges
                0x0000000000000070       0x30 obj/start.o

.debug_rnglists
                0x0000000000000000      0x1e0
 .debug_rnglists
                0x0000000000000000      0x1e0 obj/main.o

.debug_line     0x0000000000000000      0x5cb
 .debug_line    0x0000000000000000      0x527 obj/main.o
 .debug_line    0x0000000000000527       0x5a obj/primitive.o
 .debug_line    0x0000000000000581       0x4a obj/start.o

.debug_str      0x0000000000000000      0x2aa
 .debug_str     0x0000000000000000      0x2aa obj/main.o
                                        0x289 (緩和前のサイズ)
 .debug_str     0x00000000000002aa       0x59 obj/primitive.o
 .debug_str     0x00000000000002aa       0x55 obj/start.o

.debug_line_str
                0x0000000000000000       0xad
 .debug_line_str
                0x0000000000000000       0xad obj/main.o
                                         0xe8 (緩和前のサイズ)
 .debug_line_str
                0x00000000000000ad       0x4d obj/primitive.o
 .debug_line_str
                0x00000000000000ad       0x49 obj/start.o

.comment        0x0000000000000000       0x2b
 .comment       0x0000000000000000       0x2b obj/main.o
                                         0x2c (緩和前のサイズ)
